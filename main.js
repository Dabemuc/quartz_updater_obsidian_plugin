/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var _=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var R=(i,s)=>{for(var e in s)_(i,e,{get:s[e],enumerable:!0})},P=(i,s,e,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let n of v(s))!M.call(i,n)&&n!==e&&_(i,n,{get:()=>s[n],enumerable:!(t=C(s,n))||t.enumerable});return i};var $=i=>P(_({},"__esModule",{value:!0}),i);var W={};R(W,{default:()=>b});module.exports=$(W);var l=require("obsidian"),B=require("crypto");var z=[1518500249,1859775393,-1894007588,-899497514],U={sha1:1};function k(i){if(i&&!U[i]&&!U[i.toLowerCase()])throw new Error("Digest method not supported");return new m}var m=class{constructor(){this.A=1732584193,this.B=-271733879,this.C=-1732584194,this.D=271733878,this.E=-1009589776,this._size=0,this._sp=0,(!g||u>=8e3)&&(g=new ArrayBuffer(8e3),u=0),this._byte=new Uint8Array(g,u,80),this._word=new Int32Array(g,u,20),u+=80}update(s){if(typeof s=="string")return this._utf8(s);if(s==null)throw new TypeError("Invalid type: "+typeof s);let e=s.byteOffset,t=s.byteLength,n=t/64|0,r=0;if(n&&!(e&3)&&!(this._size%64)){let h=new Int32Array(s.buffer,e,n*16);for(;n--;)this._int32(h,r>>2),r+=64;this._size+=r}if(s.BYTES_PER_ELEMENT!==1&&s.buffer){let h=new Uint8Array(s.buffer,e+r,t-r);return this._uint8(h)}return r===t?this:this._uint8(s,r)}_uint8(s,e){let{_byte:t,_word:n}=this,r=s.length;for(e=e|0;e<r;){let c=this._size%64,h=c;for(;e<r&&h<64;)t[h++]=s[e++];h>=64&&this._int32(n),this._size+=h-c}return this}_utf8(s){let{_byte:e,_word:t}=this,n=s.length,r=this._sp;for(let c=0;c<n;){let h=this._size%64,o=h;for(;c<n&&o<64;){let a=s.charCodeAt(c++)|0;a<128?e[o++]=a:a<2048?(e[o++]=192|a>>>6,e[o++]=128|a&63):a<55296||a>57343?(e[o++]=224|a>>>12,e[o++]=128|a>>>6&63,e[o++]=128|a&63):r?(a=((r&1023)<<10)+(a&1023)+65536,e[o++]=240|a>>>18,e[o++]=128|a>>>12&63,e[o++]=128|a>>>6&63,e[o++]=128|a&63,r=0):r=a}o>=64&&(this._int32(t),t[0]=t[16]),this._size+=o-h}return this._sp=r,this}_int32(s,e){let{A:t,B:n,C:r,D:c,E:h}=this,o=0;for(e=e|0;o<16;)x[o++]=y(s[e++]);for(o=16;o<80;o++)x[o]=q(x[o-3]^x[o-8]^x[o-14]^x[o-16]);for(o=0;o<80;o++){let a=o/20|0,f=N(t)+J(a,n,r,c)+h+x[o]+z[a]|0;h=c,c=r,r=I(n),n=t,t=f}this.A=t+this.A|0,this.B=n+this.B|0,this.C=r+this.C|0,this.D=c+this.D|0,this.E=h+this.E|0}digest(s){let{_byte:e,_word:t}=this,n=this._size%64|0;for(e[n++]=128;n&3;)e[n++]=0;if(n>>=2,n>14){for(;n<16;)t[n++]=0;n=0,this._int32(t)}for(;n<16;)t[n++]=0;let r=this._size*8,c=(r&4294967295)>>>0,h=(r-c)/4294967296;return h&&(t[14]=y(h)),c&&(t[15]=y(c)),this._int32(t),s==="hex"?this._hex():this._bin()}_hex(){let{A:s,B:e,C:t,D:n,E:r}=this;return w(s)+w(e)+w(t)+w(n)+w(r)}_bin(){let{A:s,B:e,C:t,D:n,E:r,_byte:c,_word:h}=this;return h[0]=y(s),h[1]=y(e),h[2]=y(t),h[3]=y(n),h[4]=y(r),c.slice(0,20)}},x=new Int32Array(80),g,u=0,w=i=>(i+4294967296).toString(16).substr(-8),O=i=>i<<24&4278190080|i<<8&16711680|i>>8&65280|i>>24&255,D=i=>i,y=j()?D:O,q=i=>i<<1|i>>>31,N=i=>i<<5|i>>>27,I=i=>i<<30|i>>>2;function J(i,s,e,t){return i===0?s&e|~s&t:i===2?s&e|s&t|e&t:s^e^t}function j(){return new Uint8Array(new Uint16Array([65279]).buffer)[0]===254}var H={backendUrl:""},b=class extends l.Plugin{async onload(){await this.loadSettings();let e=this.addRibbonIcon("folder-sync","Quartz Sync",t=>{new T(this.app,this.settings).open()});this.addCommand({id:"open-quartz-sync-modal",name:"Open quartz sync modal",callback:()=>{new T(this.app,this.settings).open()}}),this.addSettingTab(new S(this.app,this))}onunload(){}async loadSettings(){this.settings=Object.assign({},H,await this.loadData())}async saveSettings(){this.settings.backendUrl.endsWith("/")&&(this.settings.backendUrl=this.settings.backendUrl.slice(0,-1)),await this.saveData(this.settings)}},T=class extends l.Modal{constructor(e,t){super(e);this.settings=t}onOpen(){let{contentEl:e}=this,t=e.createDiv("quartz-sync-modal");t.createEl("h2",{text:"Quartz Sync"}),t.createEl("p",{text:"This will attempt to sync all files marked with the quartz-sync=true frontmatter to the configured quartz_updater backend."});let n=t.createEl("button",{text:"Start sync"});t.createEl("h3",{text:"Output:"});let r=t.createEl("p",{text:"Waiting for sync to start"});n.addEventListener("click",()=>this.handleSync(n,r)),this.defaultColor=r.style.color}async handleSync(e,t){t.innerText="",t.style.color=this.defaultColor,e.setAttribute("disabled","true"),e.innerText="Syncing...";try{if(!this.settings.backendUrl||this.settings.backendUrl==="")throw new Error("Backend URL is not set");t.innerText+=`
Backend URL: ${this.settings.backendUrl}`;let n=this.app.vault.getFiles().filter(a=>{var p;let f=(p=this.app.metadataCache.getFileCache(a))==null?void 0:p.frontmatter;return f&&f["quartz-sync"]==="true"});t.innerText+=`
Building manifest for ${n.length} files`;let r=await Promise.all(n.map(async a=>{let f=await this.app.vault.read(a),p=this.hashContent(f);return t.innerText+=`
 Manifest built for ${a.path}`,{path:a.path,hash:p}}));t.innerText+=`
 Generated Manifest: 
 ${JSON.stringify(r)}`,t.innerText+=`
Sending manifest`;let c=await fetch(this.settings.backendUrl+"/request-update",{method:"POST",mode:"cors",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({manifest:r})});t.innerText+=`
Manifest sent`,t.innerText+=`
Waiting for update sessions`;let h=await c.json();if(t.innerText+=`
Received response${JSON.stringify(h)}`,c.status!==200)throw new Error("An Error occurred while sending the manifest");if(!c.body||!h.updateSessions)throw new Error("Response body is invalid");let o=h.updateSessions;if(!Array.isArray(o))throw new Error("Update sessions not found in response body");t.innerText+=`
Response validated`,t.innerText+=`
Sending updates`,await Promise.all(o.map(async a=>{t.innerText+=`
Building updates for ${a.id}`;let f=await Promise.all(a.permittedChanges.map(async d=>{if(t.innerText+=`
Building update for ${d.path} (${d.type})`,d.type==="delete")return{type:d.type,path:d.path,content:""};let F=this.app.vault.getAbstractFileByPath(d.path);if(!(F instanceof l.TFile))throw new Error(`File ${d.path} could not be read`);return{type:d.type,path:d.path,content:await this.app.vault.read(F)}}));t.innerText+=`
Updates generated for ${a.id}: 

            ${JSON.stringify(f.map(d=>({path:d.path,content:d.content.slice(0,10)+"..."})))}`,t.innerText+=`
Sending updates for ${a.id}`;let p=await fetch(this.settings.backendUrl+"/update-batch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:a.id,updates:f})}),E=await p.json();if(t.innerText+=`
Response received for ${a.id}: 
 
            ${JSON.stringify(E)}`,p.status!==200)throw new Error("An Error occurred while sending updates: "+p.status);let A=E;if(!Array.isArray(A))throw new Error("Invalid response body");A.forEach(d=>{t.innerText+=`
${d.path}: ${d.status}`})})),t.innerText+=`

Sync complete`,t.style.color="green",e.removeAttribute("disabled"),e.innerText="Restart sync"}catch(n){t.innerText+=`

Message: ${n.message} 
Stack: ${n.stack} 
Error: ${n}`,t.style.color="red",e.removeAttribute("disabled"),e.innerText="Restart sync"}}hashContent(e){return l.Platform.isMobileApp?k().update(e).digest("hex"):(0,B.createHash)("sha1").update(e).digest("hex")}onClose(){let{contentEl:e}=this;e.empty()}},S=class extends l.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new l.Setting(e).setName("Backend URL").setDesc("URL of the quartz_updater backend").addText(t=>t.setPlaceholder("Required!").setValue(this.plugin.settings.backendUrl).onChange(async n=>{this.plugin.settings.backendUrl=n,await this.plugin.saveSettings()}))}};
