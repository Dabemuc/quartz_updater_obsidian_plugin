/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var m=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var P=Object.prototype.hasOwnProperty;var R=(i,s)=>{for(var t in s)m(i,t,{get:s[t],enumerable:!0})},z=(i,s,t,e)=>{if(s&&typeof s=="object"||typeof s=="function")for(let n of M(s))!P.call(i,n)&&n!==t&&m(i,n,{get:()=>s[n],enumerable:!(e=C(s,n))||e.enumerable});return i};var $=i=>z(m({},"__esModule",{value:!0}),i);var W={};R(W,{default:()=>T});module.exports=$(W);var p=require("obsidian"),v=require("crypto");var D=[1518500249,1859775393,-1894007588,-899497514],k={sha1:1};function B(i){if(i&&!k[i]&&!k[i.toLowerCase()])throw new Error("Digest method not supported");return new E}var E=class{constructor(){this.A=1732584193,this.B=-271733879,this.C=-1732584194,this.D=271733878,this.E=-1009589776,this._size=0,this._sp=0,(!b||w>=8e3)&&(b=new ArrayBuffer(8e3),w=0),this._byte=new Uint8Array(b,w,80),this._word=new Int32Array(b,w,20),w+=80}update(s){if(typeof s=="string")return this._utf8(s);if(s==null)throw new TypeError("Invalid type: "+typeof s);let t=s.byteOffset,e=s.byteLength,n=e/64|0,r=0;if(n&&!(t&3)&&!(this._size%64)){let o=new Int32Array(s.buffer,t,n*16);for(;n--;)this._int32(o,r>>2),r+=64;this._size+=r}if(s.BYTES_PER_ELEMENT!==1&&s.buffer){let o=new Uint8Array(s.buffer,t+r,e-r);return this._uint8(o)}return r===e?this:this._uint8(s,r)}_uint8(s,t){let{_byte:e,_word:n}=this,r=s.length;for(t=t|0;t<r;){let c=this._size%64,o=c;for(;t<r&&o<64;)e[o++]=s[t++];o>=64&&this._int32(n),this._size+=o-c}return this}_utf8(s){let{_byte:t,_word:e}=this,n=s.length,r=this._sp;for(let c=0;c<n;){let o=this._size%64,a=o;for(;c<n&&a<64;){let h=s.charCodeAt(c++)|0;h<128?t[a++]=h:h<2048?(t[a++]=192|h>>>6,t[a++]=128|h&63):h<55296||h>57343?(t[a++]=224|h>>>12,t[a++]=128|h>>>6&63,t[a++]=128|h&63):r?(h=((r&1023)<<10)+(h&1023)+65536,t[a++]=240|h>>>18,t[a++]=128|h>>>12&63,t[a++]=128|h>>>6&63,t[a++]=128|h&63,r=0):r=h}a>=64&&(this._int32(e),e[0]=e[16]),this._size+=a-o}return this._sp=r,this}_int32(s,t){let{A:e,B:n,C:r,D:c,E:o}=this,a=0;for(t=t|0;a<16;)x[a++]=y(s[t++]);for(a=16;a<80;a++)x[a]=N(x[a-3]^x[a-8]^x[a-14]^x[a-16]);for(a=0;a<80;a++){let h=a/20|0,l=I(e)+j(h,n,r,c)+o+x[a]+D[h]|0;o=c,c=r,r=J(n),n=e,e=l}this.A=e+this.A|0,this.B=n+this.B|0,this.C=r+this.C|0,this.D=c+this.D|0,this.E=o+this.E|0}digest(s){let{_byte:t,_word:e}=this,n=this._size%64|0;for(t[n++]=128;n&3;)t[n++]=0;if(n>>=2,n>14){for(;n<16;)e[n++]=0;n=0,this._int32(e)}for(;n<16;)e[n++]=0;let r=this._size*8,c=(r&4294967295)>>>0,o=(r-c)/4294967296;return o&&(e[14]=y(o)),c&&(e[15]=y(c)),this._int32(e),s==="hex"?this._hex():this._bin()}_hex(){let{A:s,B:t,C:e,D:n,E:r}=this;return g(s)+g(t)+g(e)+g(n)+g(r)}_bin(){let{A:s,B:t,C:e,D:n,E:r,_byte:c,_word:o}=this;return o[0]=y(s),o[1]=y(t),o[2]=y(e),o[3]=y(n),o[4]=y(r),c.slice(0,20)}},x=new Int32Array(80),b,w=0,g=i=>(i+4294967296).toString(16).substr(-8),O=i=>i<<24&4278190080|i<<8&16711680|i>>8&65280|i>>24&255,q=i=>i,y=H()?q:O,N=i=>i<<1|i>>>31,I=i=>i<<5|i>>>27,J=i=>i<<30|i>>>2;function j(i,s,t,e){return i===0?s&t|~s&e:i===2?s&t|s&e|t&e:s^t^e}function H(){return new Uint8Array(new Uint16Array([65279]).buffer)[0]===254}var L={backendUrl:""},T=class extends p.Plugin{async onload(){await this.loadSettings();let t=this.addRibbonIcon("folder-sync","Quartz Sync",e=>{new _(this.app,this.settings).open()});this.addCommand({id:"open-quartz-sync-modal",name:"Open quartz sync modal",callback:()=>{new _(this.app,this.settings).open()}}),this.addSettingTab(new S(this.app,this))}onunload(){}async loadSettings(){this.settings=Object.assign({},L,await this.loadData())}async saveSettings(){this.settings.backendUrl.endsWith("/")&&(this.settings.backendUrl=this.settings.backendUrl.slice(0,-1)),await this.saveData(this.settings)}},_=class extends p.Modal{constructor(t,e){super(t);this.settings=e}onOpen(){let{contentEl:t}=this,e=t.createDiv("quartz-sync-modal");e.createEl("h2",{text:"Quartz Sync"}),e.createEl("p",{text:"This will attempt to sync all files marked with the quartz-sync=true frontmatter to the configured quartz_updater backend."});let n=e.createEl("button",{text:"Start sync"});e.createEl("h3",{text:"Sync status:"});let r=e.createEl("p",{text:"Not started yet"});e.createEl("h3",{text:"Client manifest generated:"});let c=e.createEl("p",{text:"Waiting for sync to start"});n.addEventListener("click",()=>this.handleSync(r,n,c))}async handleSync(t,e,n){t.innerText="Building manifest...",t.style.color="black",n.innerText="",e.setAttribute("disabled","true"),e.innerText="Syncing...";try{if(!this.settings.backendUrl||this.settings.backendUrl==="")throw new Error("Backend URL is not set");let r=this.app.vault.getFiles().filter(l=>{var f;let u=(f=this.app.metadataCache.getFileCache(l))==null?void 0:f.frontmatter;return u&&u["quartz-sync"]==="true"}),c=await Promise.all(r.map(async l=>{let u=await this.app.vault.read(l),f=this.hashContent(u);return n.innerText+=`
 Manifest built for ${l.path}`,{path:l.path,hash:f}}));n.innerText+=`
 Generated Manifest: 
 ${JSON.stringify(c)}`,t.innerText="Sending manifest...";let o=await fetch(this.settings.backendUrl+"/request-update",{method:"POST",mode:"cors",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({manifest:c})});n.innerText+=`
Manifest sent`,t.innerText="Waiting for update sessions";let a=await o.json();if(n.innerText+=`
Received response${JSON.stringify(a)}`,o.status!==200)throw new Error("An Error occurred while sending the manifest");if(!o.body||!a.updateSessions)throw new Error("Response body is invalid");let h=a.updateSessions;if(!Array.isArray(h))throw new Error("Update sessions not found in response body");n.innerText+=`
 Response validated`,t.innerText="Sending updates",await Promise.all(h.map(async l=>{n.innerText+=`
Building updates for session ${l.id}`;let u=await Promise.all(l.permittedChanges.map(async d=>{if(n.innerText+=`
Building update for ${d.path} (${d.type})`,d.type==="delete")return{type:d.type,path:d.path,content:""};let U=this.app.vault.getAbstractFileByPath(d.path);if(!(U instanceof p.TFile))throw new Error(`File ${d.path} could not be read`);return{type:d.type,path:d.path,content:await this.app.vault.read(U)}}));n.innerText+=`
Updates generated for session ${l.id}: 

            ${JSON.stringify(u.map(d=>({path:d.path,content:d.content.slice(0,10)+"..."})))}`,n.innerText+=`
Sending updates for session ${l.id}`;let f=await fetch(this.settings.backendUrl+"/update-batch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:l.id,updates:u})}),A=await f.json();if(n.innerText+=`Response received for session ${l.id}: 
 
            ${JSON.stringify(A)}`,f.status!==200)throw new Error("An Error occurred while sending updates: "+f.status);let F=A.body;if(!Array.isArray(F))throw new Error("Invalid response body");F.forEach(d=>{n.innerText+=`
${d.path}: ${d.status}`})})),t.innerText="Sync complete",t.style.color="green",e.removeAttribute("disabled"),e.innerText="Restart sync"}catch(r){t.innerText=`Message: ${r.message} 
Stack: ${r.stack} 
Error: ${r}`,t.style.color="red",e.removeAttribute("disabled"),e.innerText="Restart sync"}}hashContent(t){return p.Platform.isMobileApp?B().update(t).digest("hex"):(0,v.createHash)("sha1").update(t).digest("hex")}onClose(){let{contentEl:t}=this;t.empty()}},S=class extends p.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),new p.Setting(t).setName("Backend URL").setDesc("URL of the quartz_updater backend").addText(e=>e.setPlaceholder("Required!").setValue(this.plugin.settings.backendUrl).onChange(async n=>{this.plugin.settings.backendUrl=n,await this.plugin.saveSettings()}))}};
