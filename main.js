/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var F=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var D=Object.prototype.hasOwnProperty;var R=(i,s)=>{for(var t in s)F(i,t,{get:s[t],enumerable:!0})},q=(i,s,t,e)=>{if(s&&typeof s=="object"||typeof s=="function")for(let n of L(s))!D.call(i,n)&&n!==t&&F(i,n,{get:()=>s[n],enumerable:!(e=z(s,n))||e.enumerable});return i};var O=i=>q(F({},"__esModule",{value:!0}),i);var Q={};R(Q,{default:()=>T});module.exports=O(Q);var l=require("obsidian"),P=require("crypto");var N=[1518500249,1859775393,-1894007588,-899497514],C={sha1:1};function M(i){if(i&&!C[i]&&!C[i.toLowerCase()])throw new Error("Digest method not supported");return new U}var U=class{constructor(){this.A=1732584193,this.B=-271733879,this.C=-1732584194,this.D=271733878,this.E=-1009589776,this._size=0,this._sp=0,(!m||w>=8e3)&&(m=new ArrayBuffer(8e3),w=0),this._byte=new Uint8Array(m,w,80),this._word=new Int32Array(m,w,20),w+=80}update(s){if(typeof s=="string")return this._utf8(s);if(s==null)throw new TypeError("Invalid type: "+typeof s);let t=s.byteOffset,e=s.byteLength,n=e/64|0,r=0;if(n&&!(t&3)&&!(this._size%64)){let o=new Int32Array(s.buffer,t,n*16);for(;n--;)this._int32(o,r>>2),r+=64;this._size+=r}if(s.BYTES_PER_ELEMENT!==1&&s.buffer){let o=new Uint8Array(s.buffer,t+r,e-r);return this._uint8(o)}return r===e?this:this._uint8(s,r)}_uint8(s,t){let{_byte:e,_word:n}=this,r=s.length;for(t=t|0;t<r;){let c=this._size%64,o=c;for(;t<r&&o<64;)e[o++]=s[t++];o>=64&&this._int32(n),this._size+=o-c}return this}_utf8(s){let{_byte:t,_word:e}=this,n=s.length,r=this._sp;for(let c=0;c<n;){let o=this._size%64,a=o;for(;c<n&&a<64;){let h=s.charCodeAt(c++)|0;h<128?t[a++]=h:h<2048?(t[a++]=192|h>>>6,t[a++]=128|h&63):h<55296||h>57343?(t[a++]=224|h>>>12,t[a++]=128|h>>>6&63,t[a++]=128|h&63):r?(h=((r&1023)<<10)+(h&1023)+65536,t[a++]=240|h>>>18,t[a++]=128|h>>>12&63,t[a++]=128|h>>>6&63,t[a++]=128|h&63,r=0):r=h}a>=64&&(this._int32(e),e[0]=e[16]),this._size+=a-o}return this._sp=r,this}_int32(s,t){let{A:e,B:n,C:r,D:c,E:o}=this,a=0;for(t=t|0;a<16;)x[a++]=f(s[t++]);for(a=16;a<80;a++)x[a]=$(x[a-3]^x[a-8]^x[a-14]^x[a-16]);for(a=0;a<80;a++){let h=a/20|0,E=j(e)+W(h,n,r,c)+o+x[a]+N[h]|0;o=c,c=r,r=H(n),n=e,e=E}this.A=e+this.A|0,this.B=n+this.B|0,this.C=r+this.C|0,this.D=c+this.D|0,this.E=o+this.E|0}digest(s){let{_byte:t,_word:e}=this,n=this._size%64|0;for(t[n++]=128;n&3;)t[n++]=0;if(n>>=2,n>14){for(;n<16;)e[n++]=0;n=0,this._int32(e)}for(;n<16;)e[n++]=0;let r=this._size*8,c=(r&4294967295)>>>0,o=(r-c)/4294967296;return o&&(e[14]=f(o)),c&&(e[15]=f(c)),this._int32(e),s==="hex"?this._hex():this._bin()}_hex(){let{A:s,B:t,C:e,D:n,E:r}=this;return b(s)+b(t)+b(e)+b(n)+b(r)}_bin(){let{A:s,B:t,C:e,D:n,E:r,_byte:c,_word:o}=this;return o[0]=f(s),o[1]=f(t),o[2]=f(e),o[3]=f(n),o[4]=f(r),c.slice(0,20)}},x=new Int32Array(80),m,w=0,b=i=>(i+4294967296).toString(16).substr(-8),I=i=>i<<24&4278190080|i<<8&16711680|i>>8&65280|i>>24&255,J=i=>i,f=Y()?J:I,$=i=>i<<1|i>>>31,j=i=>i<<5|i>>>27,H=i=>i<<30|i>>>2;function W(i,s,t,e){return i===0?s&t|~s&e:i===2?s&t|s&e|t&e:s^t^e}function Y(){return new Uint8Array(new Uint16Array([65279]).buffer)[0]===254}var G={backendUrl:""},T=class extends l.Plugin{async onload(){await this.loadSettings();let t=this.addRibbonIcon("folder-sync","Quartz Sync",e=>{new A(this.app,this.settings).open()});this.addCommand({id:"open-quartz-sync-modal",name:"Open quartz sync modal",callback:()=>{new A(this.app,this.settings).open()}}),this.addSettingTab(new k(this.app,this))}onunload(){}async loadSettings(){this.settings=Object.assign({},G,await this.loadData())}async saveSettings(){this.settings.backendUrl.endsWith("/")&&(this.settings.backendUrl=this.settings.backendUrl.slice(0,-1)),await this.saveData(this.settings)}},u="not-started",_="",S="",A=class extends l.Modal{constructor(t,e){super(t);this.settings=e}onOpen(){let{contentEl:t}=this,e=t.createDiv("quartz-sync-modal");e.createEl("h2",{text:"Quartz Sync"}),e.createEl("p",{text:"This will attempt to sync all files marked with the quartz-sync=true frontmatter to the configured quartz_updater backend."});let n=e.createEl("button",{text:"Start sync"});e.createEl("h3",{text:"Sync status:"});let r=e.createEl("p",{text:u});e.createEl("h3",{text:"Client manifest generated:"});let c=e.createEl("p",{text:"..."});e.createEl("h3",{text:"Server response:"});let o=e.createEl("p",{text:"..."});n.addEventListener("click",()=>this.handleSync(r,n,o,c))}async handleSync(t,e,n,r){_="",S="",u="started",t.innerText="Building manifest...",e.setAttribute("disabled","true"),e.innerText="Syncing...";try{if(!this.settings.backendUrl||this.settings.backendUrl==="")throw new Error("Backend URL is not set");let c=this.app.vault.getFiles().filter(d=>{var p;let g=(p=this.app.metadataCache.getFileCache(d))==null?void 0:p.frontmatter;return g&&g["quartz-sync"]==="true"}),o=await Promise.all(c.map(async d=>{let g=await this.app.vault.read(d),p=this.hashContent(g);return r.innerText+=`
 Manifest build for ${d.path}`,{path:d.path,hash:p}}));u="manifest-built",r.innerText+=`
 Generated Manifest: 
 ${JSON.stringify(o)}`,t.innerText="Sending manifest...";let a=await fetch(this.settings.backendUrl+"/request-update",{method:"POST",mode:"cors",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({manifest:o})});u="manifest-sent",t.innerText="Waiting for update sessions";let h=await a.json();if(n.innerText=JSON.stringify(h),a.status!==200)throw new Error("An Error occurred while sending the manifest");if(!a.body||!h.updateSessions)throw new Error("Response body is invalid");let E=h.updateSessions;if(!Array.isArray(E))throw new Error("Update sessions not found in response body");u="update-sessions-received",t.innerText="Sending updates",n.innerText="",await Promise.all(E.map(async d=>{let g=await Promise.all(d.permittedChanges.map(async y=>{let B=this.app.vault.getAbstractFileByPath(y.path);if(!(B instanceof l.TFile))throw new Error(`File ${y.path} could not be read`);return{type:y.type,path:y.path,content:await this.app.vault.read(B)}})),p=await fetch(this.settings.backendUrl+"/update-batch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:d.id,updates:g})});if(n.innerText=n.innerText+`
`+d.id+`: 
`+JSON.stringify(await p.json()),p.status!==200)throw new Error("An Error occurred while sending updates");let v=(await p.json()).body;if(!Array.isArray(v))throw new Error("Invalid response body");v.forEach(y=>{S+=`${y.path}: ${y.status}
`})})),u="results-received",t.innerText=S,t.style.color="green",e.removeAttribute("disabled"),e.innerText="Restart sync"}catch(c){t.innerText=_,t.style.color="red",e.removeAttribute("disabled"),e.innerText="Restart sync",_=`Message: ${c.message} 
Stack: ${c.stack} 
Error: ${c}`,u="error"}}hashContent(t){return l.Platform.isMobileApp?M().update(t).digest("hex"):(0,P.createHash)("sha1").update(t).digest("hex")}onClose(){let{contentEl:t}=this;t.empty(),u="not-started",_="",S=""}},k=class extends l.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),new l.Setting(t).setName("Backend URL").setDesc("URL of the quartz_updater backend").addText(e=>e.setPlaceholder("Required!").setValue(this.plugin.settings.backendUrl).onChange(async n=>{this.plugin.settings.backendUrl=n,await this.plugin.saveSettings()}))}};
