/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var m=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var M=(i,s)=>{for(var e in s)m(i,e,{get:s[e],enumerable:!0})},P=(i,s,e,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let n of C(s))!v.call(i,n)&&n!==e&&m(i,n,{get:()=>s[n],enumerable:!(t=z(s,n))||t.enumerable});return i};var $=i=>P(m({},"__esModule",{value:!0}),i);var W={};M(W,{default:()=>T});module.exports=$(W);var f=require("obsidian"),R=require("crypto");var q=[1518500249,1859775393,-1894007588,-899497514],k={sha1:1};function B(i){if(i&&!k[i]&&!k[i.toLowerCase()])throw new Error("Digest method not supported");return new S}var S=class{constructor(){this.A=1732584193,this.B=-271733879,this.C=-1732584194,this.D=271733878,this.E=-1009589776,this._size=0,this._sp=0,(!g||w>=8e3)&&(g=new ArrayBuffer(8e3),w=0),this._byte=new Uint8Array(g,w,80),this._word=new Int32Array(g,w,20),w+=80}update(s){if(typeof s=="string")return this._utf8(s);if(s==null)throw new TypeError("Invalid type: "+typeof s);let e=s.byteOffset,t=s.byteLength,n=t/64|0,r=0;if(n&&!(e&3)&&!(this._size%64)){let o=new Int32Array(s.buffer,e,n*16);for(;n--;)this._int32(o,r>>2),r+=64;this._size+=r}if(s.BYTES_PER_ELEMENT!==1&&s.buffer){let o=new Uint8Array(s.buffer,e+r,t-r);return this._uint8(o)}return r===t?this:this._uint8(s,r)}_uint8(s,e){let{_byte:t,_word:n}=this,r=s.length;for(e=e|0;e<r;){let c=this._size%64,o=c;for(;e<r&&o<64;)t[o++]=s[e++];o>=64&&this._int32(n),this._size+=o-c}return this}_utf8(s){let{_byte:e,_word:t}=this,n=s.length,r=this._sp;for(let c=0;c<n;){let o=this._size%64,a=o;for(;c<n&&a<64;){let h=s.charCodeAt(c++)|0;h<128?e[a++]=h:h<2048?(e[a++]=192|h>>>6,e[a++]=128|h&63):h<55296||h>57343?(e[a++]=224|h>>>12,e[a++]=128|h>>>6&63,e[a++]=128|h&63):r?(h=((r&1023)<<10)+(h&1023)+65536,e[a++]=240|h>>>18,e[a++]=128|h>>>12&63,e[a++]=128|h>>>6&63,e[a++]=128|h&63,r=0):r=h}a>=64&&(this._int32(t),t[0]=t[16]),this._size+=a-o}return this._sp=r,this}_int32(s,e){let{A:t,B:n,C:r,D:c,E:o}=this,a=0;for(e=e|0;a<16;)x[a++]=u(s[e++]);for(a=16;a<80;a++)x[a]=N(x[a-3]^x[a-8]^x[a-14]^x[a-16]);for(a=0;a<80;a++){let h=a/20|0,l=I(t)+j(h,n,r,c)+o+x[a]+q[h]|0;o=c,c=r,r=J(n),n=t,t=l}this.A=t+this.A|0,this.B=n+this.B|0,this.C=r+this.C|0,this.D=c+this.D|0,this.E=o+this.E|0}digest(s){let{_byte:e,_word:t}=this,n=this._size%64|0;for(e[n++]=128;n&3;)e[n++]=0;if(n>>=2,n>14){for(;n<16;)t[n++]=0;n=0,this._int32(t)}for(;n<16;)t[n++]=0;let r=this._size*8,c=(r&4294967295)>>>0,o=(r-c)/4294967296;return o&&(t[14]=u(o)),c&&(t[15]=u(c)),this._int32(t),s==="hex"?this._hex():this._bin()}_hex(){let{A:s,B:e,C:t,D:n,E:r}=this;return b(s)+b(e)+b(t)+b(n)+b(r)}_bin(){let{A:s,B:e,C:t,D:n,E:r,_byte:c,_word:o}=this;return o[0]=u(s),o[1]=u(e),o[2]=u(t),o[3]=u(n),o[4]=u(r),c.slice(0,20)}},x=new Int32Array(80),g,w=0,b=i=>(i+4294967296).toString(16).substr(-8),O=i=>i<<24&4278190080|i<<8&16711680|i>>8&65280|i>>24&255,D=i=>i,u=H()?D:O,N=i=>i<<1|i>>>31,I=i=>i<<5|i>>>27,J=i=>i<<30|i>>>2;function j(i,s,e,t){return i===0?s&e|~s&t:i===2?s&e|s&t|e&t:s^e^t}function H(){return new Uint8Array(new Uint16Array([65279]).buffer)[0]===254}var Q={backendUrl:""},T=class extends f.Plugin{async onload(){await this.loadSettings();let e=this.addRibbonIcon("folder-sync","Quartz Sync",t=>{new _(this.app,this.settings).open()});this.addCommand({id:"open-quartz-sync-modal",name:"Open quartz sync modal",callback:()=>{new _(this.app,this.settings).open()}}),this.addSettingTab(new E(this.app,this))}onunload(){}async loadSettings(){this.settings=Object.assign({},Q,await this.loadData())}async saveSettings(){this.settings.backendUrl.endsWith("/")&&(this.settings.backendUrl=this.settings.backendUrl.slice(0,-1)),await this.saveData(this.settings)}},_=class extends f.Modal{constructor(e,t){super(e);this.settings=t}onOpen(){let{contentEl:e}=this,t=e.createDiv("quartz-sync-modal");t.createEl("h2",{text:"Quartz Sync"}),t.createEl("p",{text:"This will attempt to sync all files marked with the quartz-sync=true frontmatter to the configured quartz_updater backend."});let n=t.createEl("button",{text:"Start sync"});t.createEl("h3",{text:"Output:"});let r=t.createEl("p",{text:"Waiting for sync to start"});n.addEventListener("click",()=>this.handleSync(n,r)),this.defaultColor=r.style.color}async handleSync(e,t){t.innerText="",t.style.color=this.defaultColor,e.setAttribute("disabled","true"),e.innerText="Syncing...";try{if(!this.settings.backendUrl||this.settings.backendUrl==="")throw new Error("Backend URL is not set");t.innerText+=`
Backend URL: ${this.settings.backendUrl}`;let n=this.app.vault.getFiles().filter(l=>{var p;let y=(p=this.app.metadataCache.getFileCache(l))==null?void 0:p.frontmatter;return y&&y["quartz-sync"]==="true"});t.innerText+=`
Building manifest for ${n.length} files`;let r=await Promise.all(n.map(async l=>{let y=await this.app.vault.read(l),p=this.hashContent(y);return t.innerText+=`
 Manifest built for ${l.path}`,{path:l.path,hash:p}}));t.innerText+=`
 Generated Manifest: 
 ${JSON.stringify(r)}`,t.innerText+=`
Sending manifest`;let c=await fetch(this.settings.backendUrl+"/request-update",{method:"POST",mode:"cors",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({manifest:r})});t.innerText+=`
Manifest sent`,t.innerText+=`
Waiting for update sessions`;let o=await c.json();if(t.innerText+=`
Received response${JSON.stringify(o)}`,c.status!==200)throw new Error("An Error occurred while sending the manifest");if(!c.body||!o.updateSessions)throw new Error("Response body is invalid");let a=o.updateSessions;if(!Array.isArray(a))throw new Error("Update sessions not found in response body");t.innerText+=`
Response validated`,t.innerText+=`
Sending updates`,await Promise.all(a.map(async l=>{t.innerText+=`
Building updates for ${l.id}`;let y=await Promise.all(l.permittedChanges.map(async d=>{if(t.innerText+=`
Building update for ${d.path} (${d.type})`,d.type==="delete")return{type:d.type,path:d.path,content:""};let F=this.app.vault.getAbstractFileByPath(d.path);if(!(F instanceof f.TFile))throw new Error(`File ${d.path} could not be read`);return{type:d.type,path:d.path,content:await this.app.vault.read(F)}}));t.innerText+=`
Updates generated for ${l.id}: 

            ${JSON.stringify(y.map(d=>({path:d.path,content:d.content.slice(0,10)+"..."})))}`,t.innerText+=`
Sending updates for ${l.id}`;let p=await fetch(this.settings.backendUrl+"/update-batch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:l.id,updates:y})}),A=await p.json();if(t.innerText+=`
Response received for ${l.id}: 
 
            ${JSON.stringify(A)}`,p.status!==200)throw new Error("An Error occurred while sending updates: "+p.status);let U=A;if(!Array.isArray(U))throw new Error("Invalid response body");U.forEach(d=>{t.innerText+=`
${d.path}: ${d.status}`})})),t.innerText+=`
Rebuilding quartz`;let h=await fetch(this.settings.backendUrl+"/rebuild-quartz",{method:"POST"});if(h.status!==200)throw new Error("An Error occurred while rebuilding quartz: "+h.status+`
Response: `+await h.text());t.innerText+=`
Quartz rebuilt successfully 
  Response: ${await h.text()}`,t.innerText+=`

Sync complete`,t.style.color="green",e.removeAttribute("disabled"),e.innerText="Restart sync"}catch(n){t.innerText+=`

Message: ${n.message} 
Stack: ${n.stack} 
Error: ${n}`,t.style.color="red",e.removeAttribute("disabled"),e.innerText="Restart sync"}}hashContent(e){return f.Platform.isMobileApp?B().update(e).digest("hex"):(0,R.createHash)("sha1").update(e).digest("hex")}onClose(){let{contentEl:e}=this;e.empty()}},E=class extends f.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new f.Setting(e).setName("Backend URL").setDesc("URL of the quartz_updater backend").addText(t=>t.setPlaceholder("Required!").setValue(this.plugin.settings.backendUrl).onChange(async n=>{this.plugin.settings.backendUrl=n,await this.plugin.saveSettings()}))}};
